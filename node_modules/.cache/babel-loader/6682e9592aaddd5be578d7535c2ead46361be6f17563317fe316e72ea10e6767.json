{"ast":null,"code":"var _jsxFileName = \"/Users/nithya/NithyaAppannagaari.github.io/src/components/MasonryGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = ['/square1.jpg', '/square2.jpg', '/square3.jpg', '/vertical1.jpg', '/vertical2.jpg', '/vertical3.jpg', '/vertical4.jpg', '/vertical5.jpg', '/vertical6.jpg', '/wide1.jpg', '/wide2.jpg', '/wide3.jpg', '/wide4.jpg', '/wide5.jpg'];\nconst MasonryGrid = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleImageClick = src => {\n    setSelectedImage(src);\n  };\n  const closeModal = () => {\n    setSelectedImage(null);\n  };\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        closeModal();\n      }\n    };\n\n    // Add event listener for keydown\n    document.addEventListener('keydown', handleKeyDown);\n\n    // Cleanup event listener\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns-1 sm:columns-2 lg:columns-3 py-10 md:py-20 gap-4\",\n      children: images.map((src, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 break-inside-avoid\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: src,\n          className: \"w-full object-cover rounded-lg cursor-pointer\",\n          alt: \"my photography\",\n          onClick: () => handleImageClick(src)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"absolute top-4 right-4 text-white text-3xl cursor-pointer\",\n        onClick: closeModal,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage,\n        alt: \"Fullscreen view\",\n        className: \"max-w-full max-h-full rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(MasonryGrid, \"JEj6HdkTQ+WTAGk4QGMhDxCHE+w=\");\n_c = MasonryGrid;\nexport default MasonryGrid;\nvar _c;\n$RefreshReg$(_c, \"MasonryGrid\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","images","MasonryGrid","_s","selectedImage","setSelectedImage","handleImageClick","src","closeModal","handleKeyDown","event","key","document","addEventListener","removeEventListener","children","className","map","index","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nithya/NithyaAppannagaari.github.io/src/components/MasonryGrid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst images = [\n    '/square1.jpg',\n    '/square2.jpg',\n    '/square3.jpg',\n    '/vertical1.jpg',\n    '/vertical2.jpg',\n    '/vertical3.jpg',\n    '/vertical4.jpg',\n    '/vertical5.jpg',\n    '/vertical6.jpg',\n    '/wide1.jpg',\n    '/wide2.jpg',\n    '/wide3.jpg',\n    '/wide4.jpg',\n    '/wide5.jpg',\n];\n\nconst MasonryGrid = () => {\n    const [selectedImage, setSelectedImage] = useState(null);\n\n    const handleImageClick = (src) => {\n        setSelectedImage(src);\n    };\n\n    const closeModal = () => {\n        setSelectedImage(null);\n    };\n\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === 'Escape') {\n                closeModal();\n            }\n        };\n\n        // Add event listener for keydown\n        document.addEventListener('keydown', handleKeyDown);\n\n        // Cleanup event listener\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, []);\n\n    return (\n        <div>\n            <div className=\"columns-1 sm:columns-2 lg:columns-3 py-10 md:py-20 gap-4\">\n                {images.map((src, index) => (\n                    <div key={index} className=\"mb-4 break-inside-avoid\">\n                        <img\n                            src={src}\n                            className=\"w-full object-cover rounded-lg cursor-pointer\"\n                            alt=\"my photography\"\n                            onClick={() => handleImageClick(src)}\n                        />\n                    </div>\n                ))}\n            </div>\n\n            {/* Fullscreen Modal */}\n            {selectedImage && (\n                <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\n                    <button\n                        className=\"absolute top-4 right-4 text-white text-3xl cursor-pointer\"\n                        onClick={closeModal}\n                    >\n                        &times;\n                    </button>\n                    <img\n                        src={selectedImage}\n                        alt=\"Fullscreen view\"\n                        className=\"max-w-full max-h-full rounded-lg\"\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MasonryGrid;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAG,CACX,cAAc,EACd,cAAc,EACd,cAAc,EACd,gBAAgB,EAChB,gBAAgB,EAChB,gBAAgB,EAChB,gBAAgB,EAChB,gBAAgB,EAChB,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,CACf;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMS,gBAAgB,GAAIC,GAAG,IAAK;IAC9BF,gBAAgB,CAACE,GAAG,CAAC;EACzB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBH,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAEDP,SAAS,CAAC,MAAM;IACZ,MAAMW,aAAa,GAAIC,KAAK,IAAK;MAC7B,IAAIA,KAAK,CAACC,GAAG,KAAK,QAAQ,EAAE;QACxBH,UAAU,CAAC,CAAC;MAChB;IACJ,CAAC;;IAED;IACAI,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,aAAa,CAAC;;IAEnD;IACA,OAAO,MAAM;MACTG,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEL,aAAa,CAAC;IAC1D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAKgB,SAAS,EAAC,0DAA0D;MAAAD,QAAA,EACpEd,MAAM,CAACgB,GAAG,CAAC,CAACV,GAAG,EAAEW,KAAK,kBACnBlB,OAAA;QAAiBgB,SAAS,EAAC,yBAAyB;QAAAD,QAAA,eAChDf,OAAA;UACIO,GAAG,EAAEA,GAAI;UACTS,SAAS,EAAC,+CAA+C;UACzDG,GAAG,EAAC,gBAAgB;UACpBC,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAACC,GAAG;QAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC,GANIN,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAGLpB,aAAa,iBACVJ,OAAA;MAAKgB,SAAS,EAAC,4EAA4E;MAAAD,QAAA,gBACvFf,OAAA;QACIgB,SAAS,EAAC,2DAA2D;QACrEI,OAAO,EAAEZ,UAAW;QAAAO,QAAA,EACvB;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTxB,OAAA;QACIO,GAAG,EAAEH,aAAc;QACnBe,GAAG,EAAC,iBAAiB;QACrBH,SAAS,EAAC;MAAkC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACrB,EAAA,CA5DID,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA8DjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}